<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <script src="http://d3js.org/d3.v3.min.js"></script>
    <style>
      circle {
        fill: orange;
        stroke: black;
        stroke-width: 0.7;
        opacity: 0.7;
      }

      h2 {
        text-align: center;
        color: black;
      }

      div.years_buttons {
        position: fixed;
        top: 5px;
        left: 50px;
      }

      div.years_buttons div {
        background-color: rgb(251, 201, 127);
        padding: 3px;
        margin: 7px;
      }
    </style>
    <script type="text/javascript">
      function draw(geo_data) {
        "use strict";
        var margin = 75,
            width = 1400 - margin,
            height = 600 - margin;

        d3.select("body")
          .append("h2")
          .text("World Cup ");

        var svg = d3.select("body")
            .append("svg")
            .attr("width", width + margin)
            .attr("height", height + margin)
            .append('g')
            .attr('class', 'map');

        var years = [];

          for(var i = 1990; i < 2016; i +=1) {
            //if(i !== 1942 && i !== 1946)

              years.push(i);

          }

        var projection = d3.geo.mercator()
                               .scale(140)
                               .translate([width / 2, height / 1.2]);

        var path = d3.geo.path().projection(projection);

        var map = svg.selectAll('path')
                     .data(geo_data.features)
                     .enter()
                     .append('path')
                     .attr('d', path)
                     .style('fill', 'lightBlue')
                     .style('stroke', 'black')
                     .style('stroke-width', 0.5);

        function plot_points(data) {

            function agg_year(leaves) {
                var total_users = d3.sum(leaves, function(d) {
                   return d['Value'];
                });

                var coords = leaves.map(function(d) {
                    return projection([+d.longitude, +d.latitude]);
                });

                var center_x = d3.mean(coords, function(d) {
                    return d[0];
                });

                var center_y = d3.mean(coords, function(d) {
                    return d[1];
                });

                var countries = d3.set();

                leaves.forEach(function(d) {
                    countries.add(d['name']);
                    //teams.add(d['team2']);
                });

                return {
                  'users_total' : total_users,
                  'x' : center_x,
                  'y' : center_y,
                  'teams' : countries.values()
                };
            }

            var nested = d3.nest()
                           .key(function(d) {
                              return d['Year']//.getUTCFullYear();
                           })
                           .rollup(agg_year)
                           .entries(data);

            var user_max = d3.max(nested, function(d) {
                return d.values['Value'];
            });

            var radius = d3.scale.sqrt()
                           .domain([0, user_max])
                           .range([0, 15]);

            function key_func(d) {
                return d['key'];
            }

            svg.append('g')
               .attr("class", "bubble")
               .selectAll("circle")
               .data(nested.sort(function(a, b) {
                  return b.values['Value'] - a.values['Value'];
               }), key_func)
               .enter()
               .append("circle")
               .attr('cx', function(d) { return d.values['x']; })
               .attr('cy', function(d) { return d.values['y']; })
               .attr('r', function(d) {
                    return radius(d.values['Value']);
               })

          function update(Year) {
              var filtered = nested.filter(function(d) {
                  return new d['key']=== Year;
              });

              d3.select("h2")
                .text("World Cup " + Year);

              var circles = svg.selectAll('circle')
                               .data(filtered, key_func);

              circles.exit().remove();

              circles.enter()
                     .append("circle")
                     .transition()
                     .duration(500)
                     .attr('cx', function(d) { return d.values['x']; })
                     .attr('cy', function(d) { return d.values['y']; })
                     .attr('r', function(d) {
                        return radius(d.values['Value']);
                     });

              var user_countries = filtered[0].values['countries'];

              function update_countries(d) {
                  if(user_countries.indexOf(d.properties.name) !== -1) {
                      return "lightBlue";
                  } else {
                      return 'white';
                  }
              }

              svg.selectAll('path')
                 .transition()
                 .duration(500)
                 .style('fill', update_countries)
                 .style('stroke', update_countries);

          }

          var year_idx = 0;

          var year_interval = setInterval(function() {
            update(years[year_idx]);

            year_idx++;

            if(year_idx >= years.length) {
                clearInterval(year_interval);

                var buttons = d3.select("body")
                        .append("div")
                        .attr("class", "years_buttons")
                        .selectAll("div")
                        .data(years)
                        .enter()
                        .append("div")
                        .text(function(d) {
                            return d;
                        });

                buttons.on("click", function(d) {
                    d3.select(".years_buttons")
                      .selectAll("div")
                      .transition()
                      .duration(500)
                      .style("color", "black")
                      .style("background", "rgb(251, 201, 127)");

                    d3.select(this)
                      .transition()
                      .duration(500)
                      .style("background", "lightBlue")
                      .style("color", "white");
                    update(d);
                });
            }
          }, 1000);
      }

      //var format = d3.time.format("%d-%m-%Y (%H:%M h)");

      d3.csv("updated_data.csv", function(d) {
        d['Value'] = +d['Value'];
        d['date'] = d['Year']//format.parse(d['date']);
        return d;
      }, plot_points);
    };
    </script>
  </head>
<body>
  <script type="text/javascript">
  /*
    Use D3 to load the GeoJSON file
    */

d3.json("world_countries.json", draw);
  </script>
</body>
</html>
